#!/bin/bash

TERRAFORMER_PLAN_FILE="generated/aws/terraformer/plan.json"
AC_FILTERED_PLAN_FILE="plan.json"
AC_FILTERS=asea
AC_EXCLUDES="accessanalyzer,cloudtrail,cloudwatch,config,eni,iam,kms,logs,nacl,nat,organization,route_table,securityhub,subnet,vpc"
AC_RESOURCES="*"

while getopts 'e:f:r:' flag
do
    case "$flag" in
        e)
            AC_EXCLUDES="$OPTARG"
            ;;
        f)
            AC_FILTERS="$OPTARG"
            ;;
        r)
            AC_RESOURCES="$OPTARG"
            ;;
        *)
            echo "usage: $0 [-e] [-f] [-r] account_id" >&2
            exit
            ;;
    esac
done
shift "$(("$OPTIND" -1))"

account_id="$1"

rm -rf generated/

mkdir -p .aws

aws_config_file="${PWD}/.aws/config"
aws_shared_credentials_file="${PWD}/.aws/credentials"

cat > "$aws_config_file" <<EOF
[profile terraformer]
    role_arn = arn:aws:iam::${account_id}:role/AWSCloudFormationStackSetExecutionRole
    source_profile = terraformer-credentials
    region = ca-central-1
EOF

cat > "$aws_shared_credentials_file" <<EOF
[terraformer-credentials]
    aws_access_key_id = ${AWS_ACCESS_KEY_ID}
    aws_secret_access_key = ${AWS_SECRET_ACCESS_KEY}
    aws_session_token = ${AWS_SESSION_TOKEN}
EOF

cat > versions.tf <<EOF
terraform {
  required_providers {
    aws = {
      source = "hashicorp/aws"
    }
  }
  required_version = ">= 0.13"
}
EOF

# BUG: Terrraformer breaks unless the AWS env vars are unset
unset $(env | grep AWS_ | grep -oE "^[^=]+")

export AWS_CONFIG_FILE="$aws_config_file"
export AWS_SHARED_CREDENTIALS_FILE="$aws_shared_credentials_file"
export AWS_SDK_LOAD_CONFIG=1
export AWS_PROFILE="terraformer"

terraform init

terraformer plan aws \
    --resources "$AC_RESOURCES" \
    --excludes "$AC_EXCLUDES" \
    --regions ca-central-1 \
    --profile terraformer


# Apply filters to plan
input=$(cat $TERRAFORMER_PLAN_FILE)
output=""

for filter in ${AC_FILTERS//,/ }
do
    echo "Applying filter: $filter"
    output=$(echo "$input" | ./filters/"$filter")
    input=$output
done

echo "$output" > "$AC_FILTERED_PLAN_FILE"

# Implort the filtered plan
terraformer import plan "$AC_FILTERED_PLAN_FILE"

# Destroy resources
for d in generated/aws/*/ ; do
    if [ ! -f "${d%/}/terraform.tfstate" ]; then
        continue
    fi
    cd "$d" || exit
    echo "Destroy ${d%/} (y/n)"
    read -r destroy
    if [ "$destroy" = "y" ]; then
        terraform init
        terraform destroy
    fi
    cd - > /dev/null || exit
done

clean_up () {
    rm -rf .aws/
    rm -f .terraform.lock.hcl
    rm -f versions.tf
    # rm -f plan.json
}
trap clean_up EXIT
